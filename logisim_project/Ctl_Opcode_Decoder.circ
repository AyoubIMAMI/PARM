<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.5.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).

  <lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="1"/>
    </tool>
    <tool name="Pin">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Probe">
      <a name="facing" val="west"/>
      <a name="radix" val="10unsigned"/>
    </tool>
    <tool name="Tunnel">
      <a name="facing" val="south"/>
    </tool>
    <tool name="Pull Resistor">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Clock">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
      <a name="width" val="2"/>
    </tool>
    <tool name="Ground">
      <a name="facing" val="west"/>
      <a name="width" val="24"/>
    </tool>
    <tool name="Transistor">
      <a name="type" val="n"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool name="AND Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="OR Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="PLA">
      <a name="table" val=""/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="D Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="T Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="J-K Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="S-R Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Counter">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Shift Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Random">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="RAM">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="ROM">
      <a name="appearance" val="logisim_evolution"/>
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="Opcode_Decoder"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="Opcode_Decoder">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Opcode_Decoder"/>
    <a name="circuitnamedboxfixedsize" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <a name="clabel" val=""/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="clabelup" val="east"/>
    <comp lib="0" loc="(140,70)" name="Pin">
      <a name="label" val="Opcode"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(180,70)" name="Tunnel">
      <a name="label" val="OpCodeInput"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(470,70)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="OpCodeInput"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(500,70)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="0" loc="(790,400)" name="Constant">
      <a name="facing" val="north"/>
    </comp>
    <comp lib="0" loc="(920,120)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Shift"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(920,150)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Data_Processing"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(920,180)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Load_Store"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(920,210)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="SP_Address"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(920,240)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Conditional"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(630,120)" name="NOT Gate"/>
    <comp lib="1" loc="(630,160)" name="NOT Gate"/>
    <comp lib="1" loc="(630,200)" name="NOT Gate"/>
    <comp lib="1" loc="(630,240)" name="NOT Gate"/>
    <comp lib="1" loc="(630,280)" name="NOT Gate"/>
    <comp lib="1" loc="(630,320)" name="NOT Gate"/>
    <comp lib="1" loc="(780,360)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(780,430)" name="AND Gate">
      <a name="inputs" val="6"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(780,510)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(780,580)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(780,650)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(1063,128)" name="Text">
      <a name="text" val="Shift, add, sub, mov"/>
    </comp>
    <comp lib="8" loc="(1084,189)" name="Text">
      <a name="text" val="Load/Store"/>
    </comp>
    <comp lib="8" loc="(1115,218)" name="Text">
      <a name="text" val="SP Address"/>
    </comp>
    <comp lib="8" loc="(1122,250)" name="Text">
      <a name="text" val="Conditional branch"/>
    </comp>
    <comp lib="8" loc="(1144,159)" name="Text">
      <a name="text" val="Data Processing"/>
    </comp>
    <wire from="(140,70)" to="(180,70)"/>
    <wire from="(470,70)" to="(500,70)"/>
    <wire from="(510,120)" to="(510,490)"/>
    <wire from="(510,120)" to="(600,120)"/>
    <wire from="(510,490)" to="(510,560)"/>
    <wire from="(510,490)" to="(750,490)"/>
    <wire from="(510,560)" to="(510,630)"/>
    <wire from="(510,560)" to="(750,560)"/>
    <wire from="(510,630)" to="(750,630)"/>
    <wire from="(510,90)" to="(510,120)"/>
    <wire from="(520,160)" to="(520,410)"/>
    <wire from="(520,160)" to="(600,160)"/>
    <wire from="(520,410)" to="(520,640)"/>
    <wire from="(520,410)" to="(750,410)"/>
    <wire from="(520,640)" to="(750,640)"/>
    <wire from="(520,90)" to="(520,160)"/>
    <wire from="(530,200)" to="(530,590)"/>
    <wire from="(530,200)" to="(600,200)"/>
    <wire from="(530,590)" to="(750,590)"/>
    <wire from="(530,90)" to="(530,200)"/>
    <wire from="(540,240)" to="(540,530)"/>
    <wire from="(540,240)" to="(600,240)"/>
    <wire from="(540,530)" to="(540,600)"/>
    <wire from="(540,530)" to="(750,530)"/>
    <wire from="(540,600)" to="(540,670)"/>
    <wire from="(540,600)" to="(750,600)"/>
    <wire from="(540,670)" to="(750,670)"/>
    <wire from="(540,90)" to="(540,240)"/>
    <wire from="(550,280)" to="(600,280)"/>
    <wire from="(550,90)" to="(550,280)"/>
    <wire from="(560,320)" to="(600,320)"/>
    <wire from="(560,90)" to="(560,320)"/>
    <wire from="(630,120)" to="(660,120)"/>
    <wire from="(630,160)" to="(670,160)"/>
    <wire from="(630,200)" to="(680,200)"/>
    <wire from="(630,240)" to="(690,240)"/>
    <wire from="(630,280)" to="(700,280)"/>
    <wire from="(630,320)" to="(710,320)"/>
    <wire from="(660,120)" to="(660,350)"/>
    <wire from="(660,350)" to="(660,400)"/>
    <wire from="(660,350)" to="(750,350)"/>
    <wire from="(660,400)" to="(750,400)"/>
    <wire from="(670,160)" to="(670,370)"/>
    <wire from="(670,370)" to="(670,500)"/>
    <wire from="(670,370)" to="(750,370)"/>
    <wire from="(670,500)" to="(670,570)"/>
    <wire from="(670,500)" to="(750,500)"/>
    <wire from="(670,570)" to="(750,570)"/>
    <wire from="(680,200)" to="(680,420)"/>
    <wire from="(680,420)" to="(680,520)"/>
    <wire from="(680,420)" to="(750,420)"/>
    <wire from="(680,520)" to="(680,660)"/>
    <wire from="(680,520)" to="(750,520)"/>
    <wire from="(680,660)" to="(750,660)"/>
    <wire from="(690,240)" to="(690,440)"/>
    <wire from="(690,440)" to="(750,440)"/>
    <wire from="(700,280)" to="(700,450)"/>
    <wire from="(700,450)" to="(750,450)"/>
    <wire from="(710,320)" to="(710,460)"/>
    <wire from="(710,460)" to="(750,460)"/>
    <wire from="(780,360)" to="(800,360)"/>
    <wire from="(780,430)" to="(810,430)"/>
    <wire from="(780,510)" to="(820,510)"/>
    <wire from="(780,580)" to="(830,580)"/>
    <wire from="(780,650)" to="(840,650)"/>
    <wire from="(800,120)" to="(800,360)"/>
    <wire from="(800,120)" to="(920,120)"/>
    <wire from="(810,150)" to="(810,430)"/>
    <wire from="(810,150)" to="(920,150)"/>
    <wire from="(820,180)" to="(820,510)"/>
    <wire from="(820,180)" to="(920,180)"/>
    <wire from="(830,210)" to="(830,580)"/>
    <wire from="(830,210)" to="(920,210)"/>
    <wire from="(840,240)" to="(840,650)"/>
    <wire from="(840,240)" to="(920,240)"/>
  </circuit>
</project>
