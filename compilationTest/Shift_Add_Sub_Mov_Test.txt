# Unitary testing: test vectors for 7 segments decoder
# each input and output of the circuit must be specified in the first line of the file : port_name1[port_size1] port_name2[port_size2] ...

Instruction[16] Enable[1] Flags_Update_Mask[4] Carry[1] Imm32_Enable[1] Rm[3] Rn[3] Rd[3] Imm5[5] Imm32[32] ALU_Opcode[4]

# and then you can list the test vectors. Values are separated by spaces

# here I recall the list of the inputs and outputs :
#    inputs		   outputs 
# Instruction    Enable  Flags_Update_Mask
#000 00 00011 010 001
#Carry Imm32_Enable  Rm  Rn   Rd   Imm5                 Imm32                ALU_Opcode
#--------------------

#LSL imm5
0000000011010001 1 1110 0 0 000 010 001 00011 00000000000000000000000000000000 0010
#LSR imm5
0000100011010001 1 1110 0 0 000 010 001 00011 00000000000000000000000000000000 0011    
#ASR imm5
0001000011010001 1 1110 0 0 000 010 001 00011 00000000000000000000000000000000 0100

#--------------------

#ADC register
0001100011010001 1 1111 0 0 011 010 001 00000 00000000000000000000000000000000 0101
#SBC register
0001101011010001 1 1111 1 0 011 010 001 00000 00000000000000000000000000000000 0110
#ADC imm3
0001110011010001 1 1111 0 1 000 010 001 00000 00000000000000000000000000000011 0101
#SBC imm3
0001111011010001 1 1111 1 1 000 010 001 00000 00000000000000000000000000000011 0110

#--------------------

#Mov imm8
0010010100000011 1 1100 0 1 000 000 101 00000 11111111111111111111111111111101 1001
#CMP imm8
0010110100000011 1 1111 0 1 000 000 000 00000 00000000000000000000000000000011 1010
#ADC imm8
0011010100000011 1 1111 0 1 000 000 101 00000 00000000000000000000000000000011 0101
#SBC imm8
0011110100000011 1 1111 1 1 000 000 101 00000 00000000000000000000000000000011 0110

#--------------------
# the test can then be run by hand from the GUI or in a shell: 
# java -jar .\logisim-evolution.jar -testvector .\circuit_name .\test_vector_name.txt .\file_name.circ